// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Technovert.BankApp.Services;

namespace Technovert.BankApp.Services.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20211201050901_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Technovert.BankApp.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Bank", b =>
                {
                    b.Property<string>("BankId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DefaultCurrencyCode")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("IMPSToOther")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMPSToSame")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("RTGSToOther")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RTGSToSame")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("BankId");

                    b.HasIndex("DefaultCurrencyCode");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("BankId")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.HasIndex("BankId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Transaction", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("AccountId")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("DestinationAccountId")
                        .HasColumnType("text");

                    b.Property<string>("DestinationBankId")
                        .HasColumnType("text");

                    b.Property<DateTime>("On")
                        .HasColumnType("datetime");

                    b.Property<string>("SourceAccountId")
                        .HasColumnType("text");

                    b.Property<string>("SourceBankId")
                        .HasColumnType("text");

                    b.Property<int>("TransactionMode")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Account", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Bank", null)
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Technovert.BankApp.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Bank", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Currency", "DefaultCurrency")
                        .WithMany()
                        .HasForeignKey("DefaultCurrencyCode");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Currency", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Bank", null)
                        .WithMany("Currencies")
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Transaction", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Account", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId");

                    b.HasOne("Technovert.BankApp.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode");
                });
#pragma warning restore 612, 618
        }
    }
}
