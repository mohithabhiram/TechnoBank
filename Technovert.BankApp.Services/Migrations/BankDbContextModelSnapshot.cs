// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Technovert.BankApp.Services;

namespace Technovert.BankApp.Services.Migrations
{
    [DbContext(typeof(BankDbContext))]
    partial class BankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Technovert.BankApp.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = "abc",
                            Balance = 20m,
                            BankId = "abc",
                            Gender = 1,
                            Name = "John Doe",
                            Password = "1234",
                            Status = 1,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Bank", b =>
                {
                    b.Property<string>("BankId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DefaultCurrencyCode")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("IMPSToOther")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMPSToSame")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("RTGSToOther")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RTGSToSame")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("BankId");

                    b.HasIndex("DefaultCurrencyCode");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            BankId = "abc",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2022, 1, 27, 10, 39, 47, 352, DateTimeKind.Local).AddTicks(926),
                            DefaultCurrencyCode = "INR",
                            IMPSToOther = 0.07m,
                            IMPSToSame = 0.03m,
                            Name = "New Bank",
                            RTGSToOther = 0.05m,
                            RTGSToSame = 0.0m,
                            UpdatedBy = "admin",
                            UpdatedOn = new DateTime(2022, 1, 27, 10, 39, 47, 352, DateTimeKind.Local).AddTicks(8677)
                        });
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("BankId")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.HasIndex("BankId");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Code = "INR",
                            ExchangeRate = 1m,
                            Name = "Rupee"
                        });
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Transaction", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("DestinationAccountId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("DestinationBankId")
                        .HasColumnType("text");

                    b.Property<DateTime>("On")
                        .HasColumnType("datetime");

                    b.Property<string>("SourceAccountId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("SourceBankId")
                        .HasColumnType("text");

                    b.Property<int>("TransactionMode")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("DestinationAccountId");

                    b.HasIndex("SourceAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Account", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Bank", "Banks")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Technovert.BankApp.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Bank", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Currency", "DefaultCurrency")
                        .WithMany()
                        .HasForeignKey("DefaultCurrencyCode");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Currency", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Bank", null)
                        .WithMany("Currencies")
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("Technovert.BankApp.Models.Transaction", b =>
                {
                    b.HasOne("Technovert.BankApp.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode");

                    b.HasOne("Technovert.BankApp.Models.Account", "DestinationAccount")
                        .WithMany()
                        .HasForeignKey("DestinationAccountId");

                    b.HasOne("Technovert.BankApp.Models.Account", "SourceAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("SourceAccountId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
